<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmt.mybatis.mapper.EmployeeMapper">
    <!--
        resultMap:设置自定义映射关系
        id:唯一标识，不能重复
        type:设置映射关系中的实体类类型
        子标签：
        id:设置主键的元素关系
        result:设置普通字段的映射关系
        属性：
        property:设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
        column:设置映射关系中的字段名，必须是sql语句查询出的字段名
    -->
    <resultMap id="empResultMap" type="Employee">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
    </resultMap>
    <!--List<Employee> getAllEmp();-->
    <select id="getAllEmp" resultMap="empResultMap">
        select * from t_emp
    </select>

    <select id="getAllEmpOld" resultType="Employee">
        <!--select eid,emp_name empName,age,sex,email from t_emp-->
        select * from t_emp
    </select>

    <resultMap id="empAndDeptResultMapOne" type="Employee">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <result property="dept.did" column="did"></result>
        <result property="dept.deptName" column="dept_name"></result>
    </resultMap>
    <!--
        association：处理多对一的映射关系
        property:需要处理多对一的映射关系的属性名
        javaType:该属性的类型
    -->
    <resultMap id="empAndDeptResultMapTwo" type="Employee">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <association property="dept" javaType="Dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
        </association>
    </resultMap>
    <!--Employee getEmpAndDept(@Param("eid") Integer eid);-->
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        select * from t_emp left join t_dept on t_emp.did=t_dept.did where t_emp.eid=#{eid}
    </select>

    <!--
        select:设置分布查询的sql的唯一标识(namespace.SQLId或mapper接口的全类名)
        column:设置分布查询的条件
        fetchType:当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果
        fetchType="lazy/eager":"延迟记载/立即加载"
    -->
    <resultMap id="empAndDeptByStepOneResultMap" type="Employee">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <association property="dept"
                     select="com.xmt.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="did"
                     fetchType="eager">
        </association>
    </resultMap>
    <!--Employee getEmpAndDeptByStepOne(@Param("eid") Integer eid);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepOneResultMap">
        select * from t_emp where eid=#{eid}
    </select>

    <!--List<Employee> getDeptAndEmpByStepTwo(@Param("did") Integer did);-->
    <select id="getDeptAndEmpByStepTwo" resultType="Employee">
        select * from t_emp where did=#{did}
    </select>
</mapper>